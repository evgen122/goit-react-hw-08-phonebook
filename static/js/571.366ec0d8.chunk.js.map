{"version":3,"file":"static/js/571.366ec0d8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ItemContact/ItemContact.stuled.js","components/ItemContact/ItemContact.js","components/ContactList/ContactList.styled.js","redux/phonebook/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/PhoneBook.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 50%;\n  padding: 18px 36px 18px 4px;\n\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n\n  border: 1px solid;\n`;\n\nexport const ButAdd = styled.button`\n  width: 50%;\n`;\n\nexport const StyledInput = styled(Field)`\n  border-color: #80808052;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport React from 'react';\nimport { ButAdd, StyledForm, StyledInput } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/phonebook/operations';\n\nconst phoneRegex = RegExp(/^\\(?([0-9]{3})[-. ]?([0-9]{2})[-. ]?([0-9]{2})$/);\n\nconst formShema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too short!')\n    .max(50, 'Too Long!')\n    .required('This field is required!'),\n  number: Yup.string()\n    .matches(phoneRegex, 'Invalid phone')\n    .required('Phone is required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const examinationAdd = values => {\n    let flag = 0;\n\n    // eslint-disable-next-line array-callback-return\n    contacts.map(i => {\n      if (i.name === values.name) {\n        return (flag = 1);\n      }\n    });\n\n    if (flag === 1) {\n      return Notiflix.Notify.warning(\n        `${values.name}\n        is already in contacts`\n      );\n    }\n    dispatch(addContact(values));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={formShema}\n      onSubmit={(values, actions) => {\n        dispatch(() => examinationAdd(values, contacts));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <StyledInput id=\"name\" name=\"name\" />\n        <ErrorMessage name=\"name\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <StyledInput id=\"number\" name=\"number\" placeholder=\"111-11-11\" />\n        <ErrorMessage name=\"number\" />\n\n        <ButAdd type=\"submit\">Add contact</ButAdd>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ButtonDelete = styled.button`\n  margin-left: ${p => p.theme.spacing(2)};\n`;\n","import { useDispatch } from 'react-redux';\nimport { ButtonDelete } from './ItemContact.stuled';\nimport { deleteContact } from 'redux/phonebook/operations';\n\nexport const ItemContact = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      {name}: {number}\n      <ButtonDelete\n        onClick={() => {\n          dispatch(() => handleDelete(id));\n        }}\n        type=\"button\"\n      >\n        Delete\n      </ButtonDelete>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ItemList = styled.li`\n  padding: ${p => p.theme.spacing(4)};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { ItemContact } from 'components/ItemContact/ItemContact';\nimport { ItemList } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/phonebook/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const filters = contacts;\n  return (\n    <ul>\n      {filters.map(i => (\n        <ItemList key={i.id}>\n          <ItemContact item={i} />\n        </ItemList>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, resetFilter } from 'redux/phonebook/filterSlice';\n\nexport const Filter = () => {\n  const filters = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onChangeFilter = newFilter => dispatch(changeFilter(newFilter));\n  const onResetFilter = () => dispatch(resetFilter());\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filters}\n        onChange={evt => onChangeFilter(evt.target.value)}\n      />\n      <button onClick={onResetFilter}>Reset</button>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport { selectError, selectIsLoading } from 'redux/phonebook/selectors';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Ponebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","ButAdd","_templateObject2","StyledInput","Field","_templateObject3","phoneRegex","RegExp","formShema","Yup","shape","name","min","max","required","number","matches","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","flag","map","i","Notiflix","concat","addContact","examinationAdd","resetForm","children","_jsxs","htmlFor","id","ErrorMessage","placeholder","type","ButtonDelete","ItemContact","_ref","_ref$item","item","onClick","deleteContact","handleDelete","ItemList","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","toLowerCase","includes","ContactList","filters","Filter","value","onChange","evt","newFilter","target","changeFilter","resetFilter","PhoneBook","useEffect","fetchContacts"],"sourceRoot":""}